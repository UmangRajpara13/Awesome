# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tabs.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets, QtGui
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QAction
import os
import shutil

class AllApps(QtWidgets.QListWidget):
    def __init__(self):
        super(AllApps, self).__init__()
        self.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.setViewMode(QtWidgets.QListView.IconMode)
        self.setWordWrap(True)
        self.setObjectName("homeApps")

    def SetupAllApps(self):
        self.setIconSize(QtCore.QSize(75, 75))

        ##some dynamic search for apps in apps folder
        apps = os.listdir("Apps")
        i = 0
        for app in apps:
            # get last app from json file
            appicon = "Apps/" + app + "/icon/" + app
            self.app = QtWidgets.QListWidgetItem(QIcon(appicon), app)
            self.insertItem(i, self.app)
            i += 1

    def contextMenuEvent(self, a0: QtGui.QContextMenuEvent) -> None:
        self.menu = QtWidgets.QMenu()

        renameAction = QAction(QIcon("icons/"), "Rename", self.menu)
        renameAction.triggered.connect(self.RenameApp)

        changeiconAction = QAction(QIcon("icons/"), "Change Icon", self.menu)
        changeiconAction.triggered.connect(self.ChangeIcon)

        deleteAction = QAction(QIcon("icons/"), "Delete", self.menu)
        deleteAction.triggered.connect(self.DeleteApp)

        self.menu.addAction(renameAction)
        self.menu.addAction(changeiconAction)
        self.menu.addAction(deleteAction)

        self.menu.popup(QtGui.QCursor.pos())

    def RenameApp(self):
        pass

    def ChangeIcon(self):
        pass

    def DeleteApp(self):
        shutil.rmtree()


class AppBar(QtWidgets.QListWidget):
    def __init__(self, parent):
        super(AppBar, self).__init__()
        self.parentWidget = parent
        self.setIconSize(QtCore.QSize(50, 50))
        self.setObjectName("appBar")
        self.setViewMode(self.IconMode)
        self.setIconSize(QtCore.QSize(50, 50))

        self.setFrameShape(QtWidgets.QFrame.NoFrame)

    def SetupAppBarApps(self):
        pass

    def contextMenuEvent(self, a0: QtGui.QContextMenuEvent) -> None:
        self.menu = QtWidgets.QMenu()

        closeAction = QAction(QIcon("icons/"), "Close", self.menu)
        closeAction.triggered.connect(self.CloseApp)

        self.menu.addAction(closeAction)

        self.menu.popup(QtGui.QCursor.pos())

    def CloseApp(self, item):

        self.parentWidget.appBar.takeItem(self.parentWidget.appBar.row(self.parentWidget.appBarObjects[self.parentWidget.stackedWidget.currentIndex()]))
        del self.parentWidget.openAppsObjects[self.parentWidget.stackedWidget.currentIndex()]
        del self.parentWidget.appBarObjects[self.parentWidget.stackedWidget.currentIndex()]

        self.parentWidget.stackedWidget.removeWidget(self.parentWidget.stackedWidget.currentWidget())
        self.parentWidget.openAppsCount -= 1
