# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Settings(QtWidgets.QMainWindow):
    def __init__(self, parent):
        super(Settings, self).__init__(parent)
        self.parentWidget = parent
        self.selected = None
        self.background = None
        self.input = None
        self.output = None
        self.error = None
        self.systemmessage = None


        self.setObjectName("self")
        self.resize(751, 600)
        self.move(600,150)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")

        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")

###page
        self.Colors = QtWidgets.QWidget()
        self.Colors.setObjectName("Colors")
###
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Colors)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")

        self.colorDialog = QtWidgets.QColorDialog()
        self.colorDialog.setWindowFlags(QtCore.Qt.Widget)
        self.colorDialog.setOptions(
            QtWidgets.QColorDialog.DontUseNativeDialog |
            QtWidgets.QColorDialog.NoButtons)

        self.colorDialog.currentColorChanged.connect(self.ColorChanged)


        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_3.addWidget(self.colorDialog)
        self.colorDialog.currentColorChanged.connect

        self.Selected = None
        self.Background = RadioButton('Background', self)
        self.Background.setObjectName("Background")
        self.verticalLayout_3.addWidget(self.Background)
        self.Output = RadioButton('Background', self)
        self.Output.setObjectName("Output")
        self.verticalLayout_3.addWidget(self.Output)
        self.Input = RadioButton('Background', self)
        self.Input.setObjectName("Input")
        self.verticalLayout_3.addWidget(self.Input)
        self.Error = RadioButton('Background', self)
        self.Error.setObjectName("Error")
        self.verticalLayout_3.addWidget(self.Error)
        self.SystemMessage = RadioButton('Background', self)
        self.SystemMessage.setObjectName("SystemMessage")
        self.verticalLayout_3.addWidget(self.SystemMessage)
        self.SaveButton = QtWidgets.QPushButton(self)
        self.SaveButton.setObjectName("Save")
        self.SaveButton.clicked.connect(self.Save)

        self.verticalLayout_3.addWidget(self.SaveButton)
        self.horizontalLayout.addLayout(self.verticalLayout_3)

        self.Background.clicked.connect(self.Background.GetRadioButton)
        self.Input.clicked.connect(self.Input.GetRadioButton)
        self.Error.clicked.connect(self.Error.GetRadioButton)
        self.SystemMessage.clicked.connect(self.SystemMessage.GetRadioButton)
        self.Output.clicked.connect(self.Output.GetRadioButton)

        self.textEdit = QtWidgets.QTextEdit(self.Colors)
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout.addWidget(self.textEdit)
        self.textEdit.append('output')
        self.textEdit.append('input')
        self.textEdit.append('error')
        self.textEdit.append('system message')
        self.tabWidget.addTab(self.Colors, "")


################
        self.Fonts = QtWidgets.QWidget()
        self.Fonts.setObjectName("Fonts")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.Fonts)
        self.verticalLayout_4.setObjectName("verticalLayout_4")

        self.fontDialog = QtWidgets.QFontDialog(self.Fonts)
        self.fontDialog.setWindowFlags(QtCore.Qt.Widget)
        self.fontDialog.setOptions(
            QtWidgets.QFontDialog.DontUseNativeDialog)
        self.verticalLayout_4.addWidget(self.fontDialog)
        self.tabWidget.addTab(self.Fonts, "")
########33
        self.MyAccount = QtWidgets.QWidget()
        self.MyAccount.setObjectName("MyAccount_2")
        self.Logout = QtWidgets.QPushButton(self.MyAccount)
        self.Logout.setGeometry(QtCore.QRect(10, 150, 141, 25))
        self.Logout.setObjectName("Logout_2")
        self.Email = QtWidgets.QLabel(self.MyAccount)
        self.Email.setGeometry(QtCore.QRect(10, 30, 67, 17))
        self.Email.setObjectName("Email")
        self.ValidUntil = QtWidgets.QLabel(self.MyAccount)
        self.ValidUntil.setGeometry(QtCore.QRect(10, 80, 81, 17))
        self.ValidUntil.setObjectName("ValidUntil")
        self.tabWidget.addTab(self.MyAccount, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.tabWidget.addTab(self.MyAccount, "")

        self.setCentralWidget(self.centralwidget)

        self.retranslateUi()
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Settings", "Settings"))
        self.Background.setText(_translate("MainWindow", "Background"))
        self.Output.setText(_translate("MainWindow", "Output"))
        self.Input.setText(_translate("MainWindow", "Input"))
        self.Error.setText(_translate("MainWindow", "Error"))
        self.SaveButton.setText(_translate("MainWindow", "Save"))
        self.SystemMessage.setText(_translate("MainWindow", "System message"))
        self.Background.setText(_translate("MainWindow", "Background"))
        self.Input.setText(_translate("MainWindow", "Input"))
        self.Output.setText(_translate("MainWindow", "Output"))
        self.Error.setText(_translate("MainWindow", "Error"))
        self.Email.setText(_translate("MainWindow", "Email :"))
        self.ValidUntil.setText(_translate("MainWindow", "Valid Until :"))
        self.Logout.setText(_translate("MainWindow", "Login/Logout"))

        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Colors), _translate("MainWindow", "Colors"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Fonts), _translate("MainWindow", "Fonts"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.MyAccount), _translate("self", "My Account"))

    def ColorChanged(self):
        # print(self.colorDialog.currentColor())
        if self.selected == 'Background':
            print('back')
            self.background = self.colorDialog.currentColor().name()
            self.setStyleSheet("background-color: " + self.colorDialog.currentColor().name() + ";\n")
        if self.selected == 'Input':
            self.textEdit.set
            self.input = self.colorDialog.currentColor().name()

            # self.setStyleSheet("background-color: " + self.colorDialog.currentColor().name() + ";\n")
        if self.selected == 'Output':
            self.output = self.colorDialog.currentColor().name()

            # self.setStyleSheet("background-color: " + self.colorDialog.currentColor().name() + ";\n")
        if self.selected == 'Error':
            self.error = self.colorDialog.currentColor().name()

            # self.setStyleSheet("background-color: " + self.colorDialog.currentColor().name() + ";\n")
        if self.selected == 'System message':
            self.systemmessage = self.colorDialog.currentColor().name()

            # self.setStyleSheet("background-color: " + self.colorDialog.currentColor().name() + ";\n")

    def Save(self):
        pass
        #save json file
        self.data = {
            "email": self.email,
            "password": self.password,
            "Colors": {
                "background": self.buttonName,
                "input": self.buttonPosition,
                "output": self.buttonInterpreter,
                "error": self.buttonModule,
                "systemmessage": self.buttonCommand,
                "font": self.directory

            }
        }


class RadioButton(QtWidgets.QRadioButton):
    def __init__(self, title, parent):
        super(RadioButton, self).__init__(title, parent)
        self.parentWidget = parent

    def GetRadioButton(self):
        self.parentWidget.selected = self.text()
